name: precompile-freebsd

on:
  workflow_dispatch:
    inputs:
      otp_version:
        required: true
      build_aarch64:
        description: 'Build aarch64'
        required: false
        default: 'false'
        type: choice
        options:
          - true
          - false
      build_x86_64:
        description: 'Build x86_64'
        required: false
        default: 'true'
        type: choice
        options:
          - true
          - false
  push:
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.otp_version }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  freebsd:
    if: "!startsWith(github.ref, 'refs/tags/v23')"
    runs-on: ubuntu-latest
    env:
      OPENSSL_VERSION: "3.5.0"
      OPENSSL_VERSION_OTP_24_AND_BELOW: "1.1.1w"
    strategy:
      fail-fast: false
      matrix:
        job:
          - { fullversion: "13.2", major: "13", arch: "x86_64", target: "x86_64-unknown-freebsd" }

    name: ${{ matrix.job.target }}

    steps:
      - name: Build Check
        id: build-check
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "build=true" >> $GITHUB_OUTPUT
            export BUILD_VERSION_V="v${GITHUB_REF##*/v}"
          else
            if [ "${{ matrix.job.target }}" == "x86_64-unknown-freebsd" ]; then
              echo "build=${{ inputs.build_x86_64 }}" >> $GITHUB_OUTPUT
            fi

            if [ "${{ matrix.job.target }}" == "aarch64-unknown-freebsd" ]; then
              echo "build=${{ inputs.build_aarch64 }}" >> $GITHUB_OUTPUT
            fi

            export BUILD_VERSION_V="${{ inputs.otp_version }}"
          fi

          export BUILD_VERSION="${BUILD_VERSION_V#v}"
          echo "version=${BUILD_VERSION}" >> $GITHUB_OUTPUT

      - name: Checkout
        if: steps.build-check.outputs.build == 'true'
        uses: actions/checkout@v4

      - name: Cache Precompiled OpenSSL for OTP 24 and below
        if: steps.build-check.outputs.build == 'true' && (startsWith(github.ref, 'refs/tags/v24') || startsWith(inputs.otp_version, 'v24'))
        id: cache-openssl-otp24
        uses: actions/cache@v4
        with:
          key: openssl-111-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-x86_64-unknown-freebsd${{ matrix.job.fullversion }}
          path: |
            ./openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-x86_64-unknown-freebsd.tar.gz

      - name: Download Precompiled OpenSSL for OTP 24 and below
        if: steps.build-check.outputs.build == 'true' && (startsWith(github.ref, 'refs/tags/v24') || startsWith(inputs.otp_version, 'v24')) && steps.cache-openssl-otp24.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION_OTP_24_AND_BELOW}/openssl-x86_64-unknown-freebsd.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-x86_64-unknown-freebsd.tar.gz"

      - name: Cache Precompiled OpenSSL for OTP 25 and above
        if: "steps.build-check.outputs.build == 'true' && (!startsWith(github.ref, 'refs/tags/v24') && !startsWith(inputs.otp_version, 'v24'))"
        id: cache-openssl
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION }}-${{ matrix.job.arch }}-unknown-freebsd${{ matrix.job.fullversion }}
          path: |
            ./openssl-${{ env.OPENSSL_VERSION }}-${{ matrix.job.arch }}-unknown-freebsd.tar.gz

      - name: Download Precompiled OpenSSL for OTP 25 and above
        if: "steps.build-check.outputs.build == 'true' && !startsWith(github.ref, 'refs/tags/v24') && !startsWith(inputs.otp_version, 'v24') && steps.cache-openssl.outputs.cache-hit != 'true'"
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION}/openssl-${{ matrix.job.arch }}-unknown-freebsd.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION }}-${{ matrix.job.arch }}-unknown-freebsd.tar.gz"

      - name: Cache OTP Source
        if: steps.build-check.outputs.build == 'true'
        id: cache-otp
        uses: actions/cache@v4
        with:
          key: otp-${{ steps.build-check.outputs.version }}
          path: |
            ./otp_src_${{ steps.build-check.outputs.version }}.tar.gz

      - name: Download OTP Source
        if: steps.build-check.outputs.build == 'true' && steps.cache-otp.outputs.cache-hit != 'true'
        run: |
          export OTP_VERSION=${{ steps.build-check.outputs.version }}
          curl -fSL "https://github.com/erlang/otp/releases/download/OTP-${OTP_VERSION}/otp_src_${OTP_VERSION}.tar.gz" -o "otp_src_${OTP_VERSION}.tar.gz" || \
          curl -fSL "https://github.com/erlang/otp/archive/refs/tags/OTP-${OTP_VERSION}.tar.gz" -o "otp_src_${OTP_VERSION}.tar.gz"

      - name: Compile in FreeBSD
        id: compile-freebsd
        uses: vmactions/freebsd-vm@v1
        with:
          envs: "OPENSSL_VERSION OPENSSL_VERSION_OTP_24_AND_BELOW"
          release: ${{ matrix.job.fullversion }}
          arch: ${{ matrix.job.arch }}
          usesh: true
          prepare: |
            pkg install -y perl5 gmake

          run: |
            export TRIPLET=${{ matrix.job.arch }}-unknown-freebsd
            export ROOT_DIR="$(pwd)"
            export OTP_VERSION=${{ steps.build-check.outputs.version }}

            case "${OTP_VERSION}" in
              24.*)
                export OPENSSL_PERFIX_DIR=/tmp/openssl-${TRIPLET}
                export OPENSSL_ARCHIVE="openssl-${OPENSSL_VERSION_OTP_24_AND_BELOW}-${TRIPLET}.tar.gz"
                ;;
              *)
                export OPENSSL_PERFIX_DIR=/openssl-${OPENSSL_VERSION}-${TRIPLET}
                export OPENSSL_ARCHIVE="openssl-${OPENSSL_VERSION}-${TRIPLET}.tar.gz"
                ;;
            esac

            mkdir -p "${OPENSSL_PERFIX_DIR}"
            tar -C "${OPENSSL_PERFIX_DIR}" -xzf "${OPENSSL_ARCHIVE}"
            rm -f "${OPENSSL_ARCHIVE}"
            rm -rf otp_src_${OTP_VERSION}
            mkdir -p otp_src_${OTP_VERSION}
            tar -xzf "otp_src_v${OTP_VERSION}.tar.gz" -C otp_src_${OTP_VERSION} --strip-components=1
            rm -f "otp_src_v${OTP_VERSION}.tar.gz"
            cd "otp_src_${OTP_VERSION}"

            ./configure --without-javac --with-ssl="${OPENSSL_PERFIX_DIR}" --disable-dynamic-ssl-lib
            gmake -j$(nproc)
            gmake DESTDIR="$(pwd)/otp_${OTP_VERSION}" install
            
            cd "$(pwd)/otp_${OTP_VERSION}"
            tar -czf "${ROOT_DIR}/otp-${TRIPLET}.tar.gz" .

            cd "${ROOT_DIR}"
            sha256sum otp-${TRIPLET}.tar.gz | tee otp-${TRIPLET}.tar.gz.sha256

      - uses: softprops/action-gh-release@v2
        if: steps.build-check.outputs.build == 'true'
        with:
          tag_name: v${{ steps.build-check.outputs.version }}
          name: v${{ steps.build-check.outputs.version }}
          files: |
            otp-*.tar.gz
            otp-*.tar.gz.sha256
